
service: lws

plugins:
  - serverless-websockets-plugin

custom:
  syncTable: Connections-${self:provider.stage}
  billingMode: PAY_PER_REQUEST

provider:
  name: aws
  stage: ${opt:stage, 'dev'}
  region: us-west-2
  runtime: nodejs8.10
  iamRoleStatements:
    - Effect: Allow
      Action:
        - "execute-api:ManageConnections"
      Resource:
        - "arn:aws:execute-api:${self:provider.region}:*:**/@connections/*"
    - Effect: Allow
      Action:
        - "dynamodb:PutItem"
        - "dynamodb:GetItem"
        - "dynamodb:UpdateItem"
        - "dynamodb:DeleteItem"
        - "dynamodb:Query"
      Resource:
        - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:custom.syncTable}"

package:
  individually: true

functions:
  websocket:
    handler: src/index.default
    memorySize: 3008
    environment:
      CONNECTIONS_TABLE: ${self:custom.syncTable}
    events:
      - websocket:
          routeKey: $connect
      - websocket:
          routeKey: $disconnect
      - websocket:
          routeKey: $default

resources:
  Resources:
    ConnectionsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        BillingMode: ${self:custom.billingMode}
        TableName: ${self:custom.syncTable}
        AttributeDefinitions:
          - AttributeName: connectionId
            AttributeType: S
        KeySchema:
          - AttributeName: connectionId
            KeyType: HASH